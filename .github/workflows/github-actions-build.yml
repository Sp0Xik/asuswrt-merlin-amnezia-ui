name: Build and Release Amnezia-UI Package
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v3.2.2)'
        required: true
        default: 'v3.2.2'
      prerelease:
        description: 'Mark as pre-release'
        type: boolean
        default: false

permissions:
  contents: write
  packages: write
  actions: read

env:
  AMNEZIAWG_VERSION: "v0.2.15"
  BUILD_DATE: ${{ github.run_number }}
  COMMIT_SHA: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        arch: [armv7, aarch64]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git wget tar gzip
        
    - name: Set up cross-compilation
      run: |
        if [ "${{ matrix.arch }}" = "armv7" ]; then
          echo "GOOS=linux" >> $GITHUB_ENV
          echo "GOARCH=arm" >> $GITHUB_ENV
          echo "GOARM=7" >> $GITHUB_ENV
        elif [ "${{ matrix.arch }}" = "aarch64" ]; then
          echo "GOOS=linux" >> $GITHUB_ENV
          echo "GOARCH=arm64" >> $GITHUB_ENV
        fi
        
    - name: Build amneziawg-go
      run: |
        # Clone amneziawg-go repository
        git clone --branch ${{ env.AMNEZIAWG_VERSION }} https://github.com/amnezia-vpn/amneziawg-go.git
        cd amneziawg-go
        
        # Build for target architecture
        export CGO_ENABLED=0
        go build -v -o amneziawg-go -ldflags "-s -w -X main.Version=${{ env.AMNEZIAWG_VERSION }}"
        
        # Copy binary to build directory
        mkdir -p ../build/${{ matrix.arch }}
        cp amneziawg-go ../build/${{ matrix.arch }}/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: amneziawg-go-${{ matrix.arch }}
        path: build/${{ matrix.arch }}/amneziawg-go
        retention-days: 30
        
  package:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create amnezia-ui-package.tar.gz
      run: |
        mkdir -p package/addons/amneziaui
        
        # Copy the main addons structure
        cp -r addons/amneziaui/* package/addons/amneziaui/
        
        # Make sure directories exist
        mkdir -p package/addons/amneziaui/web
        mkdir -p package/addons/amneziaui/configs
        
        # Replace the placeholder amneziawg-go with the actual ARM64 binary (default choice)
        if [ -f "amneziawg-go-aarch64/amneziawg-go" ]; then
          cp amneziawg-go-aarch64/amneziawg-go package/addons/amneziaui/amneziawg-go
          chmod +x package/addons/amneziaui/amneziawg-go
        else
          echo "Warning: ARM64 binary not found, using ARMv7"
          cp amneziawg-go-armv7/amneziawg-go package/addons/amneziaui/amneziawg-go
          chmod +x package/addons/amneziaui/amneziawg-go
        fi
        
        # Ensure main script is executable
        chmod +x package/addons/amneziaui/amnezia-ui
        
        # Create version info
        cat > package/addons/amneziaui/version.info << EOF
        VERSION=${{ github.event.inputs.version || github.ref_name }}
        BUILD_DATE=$(date -u "+%Y-%m-%d %H:%M:%S UTC")
        BUILD_NUMBER=${{ env.BUILD_DATE }}
        COMMIT_SHA=${{ env.COMMIT_SHA }}
        AMNEZIAWG_VERSION=${{ env.AMNEZIAWG_VERSION }}
        EOF
        
        # Create the package
        cd package
        tar -czf ../amnezia-ui-package.tar.gz addons/
        cd ..
        
        # Verify package structure
        echo "Package contents:"
        tar -tzf amnezia-ui-package.tar.gz
        
    - name: Create individual arch packages (legacy support)
      run: |
        # Create ARMv7 package
        mkdir -p legacy-armv7/addons/amneziaui
        cp -r addons/amneziaui/* legacy-armv7/addons/amneziaui/
        if [ -f "amneziawg-go-armv7/amneziawg-go" ]; then
          cp amneziawg-go-armv7/amneziawg-go legacy-armv7/addons/amneziaui/amneziawg-go
          chmod +x legacy-armv7/addons/amneziaui/amneziawg-go
        fi
        chmod +x legacy-armv7/addons/amneziaui/amnezia-ui
        cd legacy-armv7
        tar -czf ../amnezia-ui-armv7-package.tar.gz addons/
        cd ..
        
        # Create ARM64 package  
        mkdir -p legacy-aarch64/addons/amneziaui
        cp -r addons/amneziaui/* legacy-aarch64/addons/amneziaui/
        if [ -f "amneziawg-go-aarch64/amneziawg-go" ]; then
          cp amneziawg-go-aarch64/amneziawg-go legacy-aarch64/addons/amneziaui/amneziawg-go
          chmod +x legacy-aarch64/addons/amneziaui/amneziawg-go
        fi
        chmod +x legacy-aarch64/addons/amneziaui/amnezia-ui
        cd legacy-aarch64
        tar -czf ../amnezia-ui-aarch64-package.tar.gz addons/
        cd ..
        
    - name: Calculate checksums
      run: |
        sha256sum *.tar.gz > checksums.txt
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: Amnezia-UI Universal ${{ github.event.inputs.version || github.ref_name }} - Ultimate DPI Bypass Edition
        body: |
          📦 **Complete Release Package for ASUSWRT-Merlin**
          
          This release provides the complete `amnezia-ui-package.tar.gz` with proper structure for ASUSWRT-Merlin addons.
          
          📁 **Package Structure**
          ```
          addons/
          └── amneziaui/
              ├── amneziawg-go           # AmneziaWG binary (architecture-specific)
              ├── web/                   # Web interface files
              ├── configs/               # Configuration files directory
              └── amnezia-ui            # Main control script
          ```
          
          🚀 **Installation**
          
          One-line install (recommended):
          ```bash
          curl -sSL https://raw.githubusercontent.com/Sp0Xik/asuswrt-merlin-amnezia-ui/main/install.sh | sh
          ```
          
          Manual install:
          ```bash
          wget https://github.com/Sp0Xik/asuswrt-merlin-amnezia-ui/releases/latest/download/amnezia-ui-package.tar.gz
          tar -xzf amnezia-ui-package.tar.gz
          cp -r addons/amneziaui /jffs/addons/
          chmod +x /jffs/addons/amneziaui/amnezia-ui
          ```
          
          ✨ **What's New in ${{ github.event.inputs.version || github.ref_name }}**
          
          • 📁 **Updated package structure**: Clean `addons/amneziaui/` layout according to new repository structure
          • 🔧 **Verified components**: All required files (amnezia-ui, amneziawg-go, web/, configs/) included
          • 🛠️ **Install script compatibility**: Updated to work with new structure
          • 📝 **Updated documentation**: README reflects new repository organization
          • 🧪 **Installation testing**: Verified install.sh works correctly
          
          🎯 **Features**
          
          • AmneziaWG 1.5 with full DPI circumvention
          • Web dashboard at http://router-ip:8080
          • Command-line interface for power users
          • Custom scripts support via /jffs/amneziaui_custom/
          • VPN Director compatibility
          • Merlin WireGuard coexistence
          • Advanced DPI bypass: All presets (I1-I5, S1-S4, H1-H4)
          • Universal compatibility: ARMv7, ARMv8/AArch64, MIPS
          
          📋 **Requirements**
          
          • ASUSWRT-Merlin 3004.388.x+
          • Custom scripts enabled
          • 10MB free space in /jffs
          • Entware (automatically installed if missing)
          
          🔧 **Quick Start**
          
          ```bash
          # Add configuration
          amnezia-ui add /path/to/config.conf
          
          # Start VPN interface
          amnezia-ui start amnezia0
          
          # Start web interface
          amnezia-ui web start
          
          # Check status
          amnezia-ui status
          ```
          
          📚 **Documentation**
          
          For detailed guides, see the [README](https://github.com/Sp0Xik/asuswrt-merlin-amnezia-ui#readme).
          
          ---
          **Build Date**: $(date -u "+%Y-%m-%d")
          **Tested on**: RT-AX88U, RT-AX86U, RT-AC68U, TUF-AX5400
        draft: false
        prerelease: ${{ github.event.inputs.prerelease || false }}
        generate_release_notes: true
        target_commitish: ${{ github.sha }}
        files: |
          amnezia-ui-package.tar.gz
          amnezia-ui-armv7-package.tar.gz
          amnezia-ui-aarch64-package.tar.gz
          checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update latest release info
      run: |
        echo "Release ${{ github.event.inputs.version || github.ref_name }} created successfully" >> $GITHUB_STEP_SUMMARY
        echo "Main package: [amnezia-ui-package.tar.gz](https://github.com/Sp0Xik/asuswrt-merlin-amnezia-ui/releases/latest/download/amnezia-ui-package.tar.gz)" >> $GITHUB_STEP_SUMMARY
        echo "Install command: \`curl -sSL https://raw.githubusercontent.com/Sp0Xik/asuswrt-merlin-amnezia-ui/main/install.sh | sh\`" >> $GITHUB_STEP_SUMMARY
