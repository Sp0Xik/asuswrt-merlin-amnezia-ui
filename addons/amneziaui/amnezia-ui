#!/bin/sh
# Amnezia-UI for ASUSWRT-Merlin
# AmneziaWG (WireGuard with DPI bypass) addon
# Provides command-line and web interface management with router ASP integration
VERSION="3.4.1"
BASE_DIR="/jffs/addons/amneziaui"
CONFIG_DIR="$BASE_DIR/configs"
WEB_DIR="$BASE_DIR/web"
CUSTOM_DIR="/jffs/amneziaui_custom"
PID_FILE="/tmp/amneziaui.pid"
LOG_FILE="/tmp/amneziaui.log"
WEB_PID="/tmp/amneziaui_web.pid"
WEB_PORT="8080"
ASP_DIR="$WEB_DIR/asp"
ASP_INDEX="$ASP_DIR/index.asp"
OVERLAY_DIR="/jffs/overlay/www"
STOCK_WWW="/www"
VPN_ASP="Advanced_VPN_Content.asp"
# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color
log() { echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"; }
print_status() {
    case $1 in
        error) echo -e "${RED}[ERROR]${NC} $2" ;;
        success) echo -e "${GREEN}[OK]${NC} $2" ;;
        warning) echo -e "${YELLOW}[WARNING]${NC} $2" ;;
        info|*) echo "[INFO] $2" ;;
    esac
    log "$1: $2"
}
check_merlin() {
    if [ -f /jffs/.asusrouter ]; then
        print_status success "ASUSWRT-Merlin compatibility confirmed (marker found)"; return 0; fi
    if uname -a 2>/dev/null | grep -iq merlin; then
        print_status info "Merlin detected, creating compatibility marker"
        touch /jffs/.asusrouter 2>/dev/null && { print_status success "Compatibility marker created successfully"; return 0; }
    fi
    print_status warning "ASUSWRT-Merlin firmware not detected"
    print_status info "Continuing anyway - to force, run: touch /jffs/.asusrouter"; return 0
}
ensure_dirs() {
    mkdir -p "$CONFIG_DIR" "$WEB_DIR" "$ASP_DIR" "$CUSTOM_DIR"
}
write_asp_page() {
    mkdir -p "$ASP_DIR"
    cat > "$ASP_INDEX" << 'EOF'
<% nvram("productid"); %>
<meta http-equiv="refresh" content="10"/>
<!DOCTYPE html><html><head><meta charset="utf-8"><title>Amnezia-UI (AmneziaWG)</title>
<style>body{font-family:Arial,Helvetica,sans-serif;background:#0b1220;color:#e8eefc;margin:0;padding:16px}
.card{background:#121a2b;border:1px solid #1d2a44;border-radius:8px;padding:16px;max-width:780px}
.btn{display:inline-block;padding:10px 14px;background:#3b82f6;color:#fff;text-decoration:none;border-radius:6px;margin-right:8px}
.badge{padding:4px 8px;border-radius:12px}.ok{background:#16a34a}.fail{background:#dc2626}.warn{background:#f59e0b}
.small{opacity:.8;font-size:12px}
</style>
<script>
async function ping(url){try{const r=await fetch(url,{method:'GET'});return r.ok}catch(e){return false}}
async function go(){const alive=await ping('/status');const el=document.getElementById('ws');el.textContent=alive?'RUNNING':'STOPPED';el.className='badge '+(alive?'ok':'fail');}
window.addEventListener('load',go);
</script></head><body>
<div class="card">
  <h2>Amnezia-UI (AmneziaWG)</h2>
  <p>Service status: <span class="badge warn" id="ws">CHECKING</span></p>
  <p>
    <a class="btn" href="/">Open Web UI</a>
    <a class="btn" href="http://router.asus.com:8080/">Open on router.asus.com</a>
  </p>
  <p class="small">This page auto-refreshes every 10 seconds.</p>
</div>
</body></html>
EOF
}
start_web_server() {
    ensure_dirs
    write_asp_page
    if [ -f "$WEB_PID" ] && kill -0 "$(cat "$WEB_PID" 2>/dev/null)" 2>/dev/null; then
        print_status info "Web already running on port $WEB_PORT"; return 0; fi
    if command -v httpd >/dev/null 2>&1; then
        httpd -p "$WEB_PORT" -h "$WEB_DIR" &
        echo $! > "$WEB_PID"
        print_status success "Web UI started on port $WEB_PORT"
    else
        print_status error "busybox httpd not found"; return 1
    fi
}
stop_web_server() {
    if [ -f "$WEB_PID" ]; then
        kill "$(cat "$WEB_PID")" 2>/dev/null || true
        rm -f "$WEB_PID"
        print_status success "Web UI stopped"
    else
        killall httpd 2>/dev/null || true
    fi
}
web_status() { if [ -f "$WEB_PID" ] && kill -0 "$(cat "$WEB_PID" 2>/dev/null)" 2>/dev/null; then echo "running"; else echo "stopped"; fi }
# --- Router UI Integration (Overlay + sed patch) ---
inject_menu_overlay() {
    mkdir -p "$OVERLAY_DIR"
    local src="$STOCK_WWW/$VPN_ASP"
    local oly_file="$OVERLAY_DIR/$VPN_ASP"
    [ -f "$src" ] || { print_status warning "Stock $src not found yet"; return 1; }
    if [ ! -f "$oly_file" ]; then
        cp -f "$src" "$oly_file" || { print_status error "Copy to overlay failed"; return 1; }
        sed -i 's|id="VPNMenu"|id="VPNMenu"><a href="/amneziaui/asp/index.asp">Amnezia-UI</a>|' "$oly_file" || true
        print_status info "Overlay prepared: $oly_file"
    else
        # ensure link exists
        grep -q "/amneziaui/asp/index.asp" "$oly_file" || sed -i 's|id="VPNMenu"|id="VPNMenu"><a href="/amneziaui/asp/index.asp">Amnezia-UI</a>|' "$oly_file" || true
    fi
    mount -o bind "$oly_file" "$src" 2>/dev/null || true
    print_status success "Overlay bind-mounted: $oly_file -> $src"
}
patch_menu_sed() {
    local src="$STOCK_WWW/$VPN_ASP"
    [ -f "$src" ] || { print_status warning "Stock $src not found yet"; return 1; }
    sed -i 's|id="VPNMenu"|id="VPNMenu"><a href="/amneziaui/asp/index.asp">Amnezia-UI</a>|' "$src" 2>/dev/null || true
    print_status success "Direct sed patch applied to router VPN menu"
}
setup_hooks() {
    mkdir -p /jffs/scripts
    # services-start: start our web and ensure sed patch as fallback
    if ! grep -q "amneziaui web start" /jffs/scripts/services-start 2>/dev/null; then
        cat >> /jffs/scripts/services-start <<'EOSVC'
#!/bin/sh
# Amnezia-UI autostart + non-overlay VPN menu patch (fallback)
/jffs/addons/amneziaui/amnezia-ui web start >/dev/null 2>&1 &
# delay and patch in case overlay not used
sleep 5
/jffs/addons/amneziaui/amnezia-ui web asp-status >/dev/null 2>&1 || true
/jffs/addons/amneziaui/amnezia-ui ui patch >/dev/null 2>&1 || true
EOSVC
        chmod 755 /jffs/scripts/services-start
    fi
    # init-start: try overlay injection after httpd comes up
    if ! grep -q "amneziaui/amnezia-ui ui overlay" /jffs/scripts/init-start 2>/dev/null; then
        cat >> /jffs/scripts/init-start <<'EOINIT'
#!/bin/sh
# Ensure web service and ASP exist
/jffs/addons/amneziaui/amnezia-ui web start >/dev/null 2>&1 &
# wait for stock httpd and /www
sleep 5
/jffs/addons/amneziaui/amnezia-ui ui overlay >/dev/null 2>&1 || true
EOINIT
        chmod 755 /jffs/scripts/init-start
    fi
}
# --- Web/ASP control helpers ---
asp_create(){ write_asp_page; print_status success "ASP page ensured at $ASP_INDEX"; }
asp_status(){ [ -f "$ASP_INDEX" ] && echo "ASP: present ($ASP_INDEX)" || echo "ASP: missing"; }
# --- Install/Uninstall ---
install_addon() {
    check_merlin
    ensure_dirs
    write_asp_page
    setup_hooks
    print_status success "Addon installed with router UI hooks"
}
uninstall_addon() {
    stop_web_server
    umount "$STOCK_WWW/$VPN_ASP" 2>/dev/null || true
    rm -rf "$BASE_DIR"
    sed -i '/amneziaui/d' /jffs/scripts/services-start 2>/dev/null || true
    sed -i '/amneziaui/d' /jffs/scripts/init-start 2>/dev/null || true
    print_status success "Addon uninstalled"
}
start_interface(){ iface="${1:-amnezia0}"; print_status info "Start $iface"; }
stop_interface(){ iface="${1:-amnezia0}"; print_status info "Stop $iface"; }
restart_interface(){ iface="${1:-amnezia0}"; stop_interface "$iface"; start_interface "$iface"; }
add_config(){ cfg="$1"; [ -f "$cfg" ] || { print_status error "Config not found"; exit 1; }; cp -f "$cfg" "$CONFIG_DIR"/; print_status success "Config added"; }
show_status(){
    echo "Amnezia-UI v$VERSION"
    echo "Web: $(web_status) on port $WEB_PORT"
    echo "Config dir: $CONFIG_DIR"
    echo "Custom dir: $CUSTOM_DIR"
}
usage(){ cat << EOF
Amnezia-UI v$VERSION - AmneziaWG Management Tool
Usage: $0 [command]
  install | uninstall
  start|stop|restart [iface]
  status
  add <config_file>
  web start|stop|status
  web asp-create|asp-status
  ui overlay|patch
EOF
}
main(){
 case "$1" in
   install) install_addon ;;
   uninstall) uninstall_addon ;;
   start) start_interface "$2" ;;
   stop) stop_interface "$2" ;;
   restart) restart_interface "$2" ;;
   add) add_config "$2" ;;
   status) show_status ;;
   web)
     case "$2" in
       start) start_web_server ;;
       stop) stop_web_server ;;
       status) web_status ;;
       asp-create) asp_create ;;
       asp-status) asp_status ;;
       *) print_status error "Invalid web command"; exit 1 ;;
     esac ;;
   ui)
     case "$2" in
       overlay) inject_menu_overlay ;;
       patch) patch_menu_sed ;;
       *) print_status error "Invalid ui command"; exit 1 ;;
     esac ;;
   ""|help|-h|--help) usage ;;
   *) print_status error "Unknown command: $1"; usage; exit 1 ;;
 esac
}
main "$@"
